name: iOS CI

on:
  push:
    branches: ["*"]
  pull_request:
    branches: ["*"]

jobs:
  build-and-test:
    if: ${{ github.ref_name == github.event.repository.default_branch || github.event_name == 'pull_request' }}
    runs-on: macos-latest

    steps:
      # 1) Checkout
      - name: Checkout code
        uses: actions/checkout@v4.2.2

      # 2) Cache DerivedData（速さ優先の最小キャッシュ）
      - name: Cache DerivedData
        uses: actions/cache@v4.2.3
        with:
          path: ~/Library/Developer/Xcode/DerivedData
          key: ${{ runner.os }}-xcode-derived-${{ hashFiles('**/*.swift') }}
          restore-keys: |
            ${{ runner.os }}-xcode-derived-

      # 3) Xcode（最新安定）
      - name: Setup Xcode (latest stable)
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      # 4) SwiftLint をプラグインではなく CLI で実行（brew update しない）
      - name: Install SwiftLint & xcpretty
        run: |
          brew install swiftlint || true
          brew install xcpretty || true

      - name: Run SwiftLint (repo root)
        run: swiftlint --strict || true

      # 5) 依存解決（プラグイン/マクロ検証はスキップして止まらないようにする）
      - name: Resolve Swift Packages
        run: |
          xcodebuild \
            -project APIClientSample.xcodeproj \
            -resolvePackageDependencies \
            -skipPackagePluginValidation \
            -skipMacroValidation

      # 6) SwiftPM パッケージ単体テスト（APIModule）
      - name: SwiftPM Package Test (APIModule)
        working-directory: APIModule
        run: swift test -v

      # 7) Build（コード署名無効 / 検証スキップ）
      - name: Build
        run: |
          xcodebuild build \
            -project APIClientSample.xcodeproj \
            -scheme APIClientSample \
            -destination 'platform=iOS Simulator,OS=18.5,name=iPhone 16 Pro' \
            -skipPackagePluginValidation \
            -skipMacroValidation \
            CODE_SIGN_IDENTITY="" \
            CODE_SIGNING_REQUIRED=NO \
          | xcpretty

      # 8) Test（結果は xcpretty で軽量表示）
      - name: Build and test
        run: |
          xcodebuild test \
            -project APIClientSample.xcodeproj \
            -scheme APIClientSample \
            -destination 'platform=iOS Simulator,OS=18.5,name=iPhone 16 Pro' \
            -enableCodeCoverage YES \
            -skipPackagePluginValidation \
            -skipMacroValidation \
          | xcpretty
