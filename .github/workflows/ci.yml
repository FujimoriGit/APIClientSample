name: iOS CI

on:
  push:
    branches: ["*"]
  pull_request:
    branches: ["*"]

jobs:
  build-and-test:
    if: ${{ github.ref_name == github.event.repository.default_branch || github.event_name == 'pull_request' }}
    runs-on: macos-latest

    steps:
      # 1. リポジトリのコードをチェックアウト
      - name: Checkout code
        uses: actions/checkout@v4.2.2

      # 2. Swift Package の依存解決（APIModule を自動検出）
      - name: Resolve SwiftPM for APIModule
        shell: bash
        run: |
          set -euo pipefail
          MOD_PATH="$(git ls-files | grep -E '(^|.*/)(APIModule)/Package\.swift$' | head -n1 | xargs dirname || true)"
          if [[ -z "${MOD_PATH}" || ! -d "${MOD_PATH}" ]]; then
            echo "APIModule not found. Current tree:"
            ls -la
            exit 1
          fi
          echo "Detected APIModule at: ${MOD_PATH}"
          swift package --package-path "${MOD_PATH}" resolve

      # 3. Xcode パッケージ依存の解決（workspace があれば優先）
      - name: Resolve Xcode Packages (auto)
        shell: bash
        run: |
          set -euo pipefail
          WS=$(find . -name "*.xcworkspace" -type d | head -n1 || true)
          if [[ -n "${WS}" ]]; then
            echo "Using workspace: ${WS}"
            xcodebuild -resolvePackageDependencies -workspace "${WS}" -scheme APIClientSample
          else
            echo "Using project: APIClientSample.xcodeproj"
            xcodebuild -resolvePackageDependencies -project APIClientSample.xcodeproj
          fi

      # 4. Build（コード署名無効 / 検証スキップ）
      - name: Build
        run: |
          xcodebuild build \
            -project APIClientSample.xcodeproj \
            -scheme APIClientSample \
            -destination 'platform=iOS Simulator,OS=18.5,name=iPhone 16 Pro' \
            -skipPackagePluginValidation \
            -skipMacroValidation \
            CODE_SIGN_IDENTITY="" \
            CODE_SIGNING_REQUIRED=NO \
          | xcpretty
