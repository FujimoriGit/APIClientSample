name: CI (SwiftLint + SwiftPM Build/Test + iOS App Build/Test)

on:
  push:
    branches: [ main, develop ]      # ← これらのブランチに push されたら起動
  pull_request:                      # ← いずれのブランチ向け PR でも起動

env:
  WORKSPACE_PATH: APIClientSample.xcworkspace   # 例: repo-root/APIClientSample.xcworkspace
  APP_SCHEME: APIClientSample                   # 例: 共有済みスキーム名（大小/スペース厳密）
  PACKAGE_DIR: APIModule                  # 例: Package.swift があるディレクトリ
  IOS_SIM_NAME: "iPhone 16 Pro"             # 例: 利用するシミュレータ名
  IOS_SIM_OS: "latest"                  # 例: OS バージョン（latest か "18.0" のように固定も可）
  DERIVED_DATA: ${{ github.workspace }}/.derivedData

jobs:
  lint-build-test:
    runs-on: macos-latest               # iOS シミュレータ/xcodebuild が使える macOS ランナー

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # ---------- SwiftLint ----------
      - name: Install SwiftLint (Homebrew)
        run: |
          brew update
          brew install swiftlint

      - name: SwiftLint (repo root)
        run: swiftlint --strict

      - name: SwiftLint (APIModule package)
        run: swiftlint --strict --path "$PACKAGE_DIR"

      - name: SwiftLint (App, if exists)
        run: |
          if [ -d "App" ]; then swiftlint --strict --path App; fi

      # ---------- Caches ----------
      - name: Cache SwiftPM / DerivedData
        uses: actions/cache@v4
        with:
          path: |
            ~/Library/Developer/Xcode/DerivedData
            ~/Library/Caches/org.swift.swiftpm
            ~/.swiftpm
          key: spm-${{ runner.os }}-${{ hashFiles('**/Package.resolved') }}

      # ---------- Swift Package: Build & Test ----------
      - name: Swift Package - Resolve
        working-directory: ${{ env.PACKAGE_DIR }}
        run: swift package resolve

      - name: Swift Package - Build
        working-directory: ${{ env.PACKAGE_DIR }}
        run: swift build -v

      - name: Swift Package - Test
        working-directory: ${{ env.PACKAGE_DIR }}
        run: swift test -v

      # ---------- iOS App: Build & Test (Simulator) ----------
      - name: Show Xcode version
        run: xcodebuild -version

      - name: List schemes (debug)
        run: xcodebuild -list -workspace "$WORKSPACE_PATH" || true

      - name: Build App (Debug)
        run: |
          xcodebuild \
            -workspace "$WORKSPACE_PATH" \
            -scheme "$APP_SCHEME" \
            -configuration Debug \
            -destination "platform=iOS Simulator,name=${IOS_SIM_NAME},OS=${IOS_SIM_OS}" \
            -derivedDataPath "$DERIVED_DATA" \
            -skipPackagePluginValidation \
            -quiet build

      - name: Test App (Debug)
        run: |
          xcodebuild \
            -workspace "$WORKSPACE_PATH" \
            -scheme "$APP_SCHEME" \
            -configuration Debug \
            -destination "platform=iOS Simulator,name=${IOS_SIM_NAME},OS=${IOS_SIM_OS}" \
            -derivedDataPath "$DERIVED_DATA" \
            -skipPackagePluginValidation \
            -quiet test

      # ---------- Logs on failure ----------
      - name: Archive Logs (on failure)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: xcode-logs
          path: |
            ${{ env.DERIVED_DATA }}/Logs
            ~/Library/Logs/DiagnosticReports
            ~/Library/Logs/CoreSimulator
