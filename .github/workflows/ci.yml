name: iOS CI

on:
  push:
    branches: ["*"]
  pull_request:
    branches: ["*"]

jobs:
  build-and-test:
    if: ${{ github.ref_name == github.event.repository.default_branch || github.event_name == 'pull_request' }}
    runs-on: macos-latest

    steps:
      # 1. リポジトリをチェックアウト
      - name: Checkout code
        uses: actions/checkout@v4.2.2

      # 2. DerivedData をキャッシュ
      - name: Cache DerivedData
        uses: actions/cache@v4.2.3
        with:
          path: ~/Library/Developer/Xcode/DerivedData
          key: ${{ runner.os }}-xcode-derived-${{ hashFiles('**/*.swift') }}
          restore-keys: |
            ${{ runner.os }}-xcode-derived-

      # 3. Xcode（最新安定）を選択
      - name: Setup Xcode (latest stable)
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      # 4. SPM 依存解決（プラグイン検証とマクロ検証をスキップ）
      - name: Resolve Swift Packages
        run: |
          xcodebuild \
            -project APIClientSample.xcodeproj \
            -resolvePackageDependencies \
            -skipPackagePluginValidation \
            -skipMacroValidation

      # 4.5 SwiftPM パッケージ単体テスト（APIModule）
      - name: SwiftPM Package Test (APIModule)
        working-directory: APIModule
        run: swift test -v

      # 6. テスト（SwiftLint BuildTool Plugin などの検証をスキップ）
      - name: Build and test
        run: |
          xcodebuild test \
            -project APIClientSample.xcodeproj \
            -scheme APIClientSample \
            -destination 'platform=iOS Simulator,OS=18.5,name=iPhone 16 Pro' \
            -enableCodeCoverage YES \
            -skipPackagePluginValidation \
            -skipMacroValidation \
          | xcpretty
