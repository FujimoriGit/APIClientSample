name: CI (SwiftLint + iOS App Test)

on:
  push:
    branches: [ main, develop ]
  pull_request:

env:
  WORKSPACE_PATH: APIClientSample.xcworkspace
  APP_SCHEME: APIClientSample
  IOS_SIM_NAME: "iPhone 16 Pro"
  IOS_SIM_OS: "18.6"
  DERIVED_DATA: ${{ github.workspace }}/.derivedData

jobs:
  lint-and-test:
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Select Xcode 16
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '16.*'

      # ---------- SwiftLint ----------
      - name: Install SwiftLint (no auto-update)
        env:
          HOMEBREW_NO_AUTO_UPDATE: 1
        run: brew install swiftlint

      - name: SwiftLint
        run: swiftlint --strict

      # ---------- Caches ----------
      - name: Cache DerivedData + SwiftPM
        uses: actions/cache@v4
        with:
          path: |
            ${{ env.DERIVED_DATA }}
            ~/Library/Caches/org.swift.swiftpm
            ~/.swiftpm
          key: xcode-${{ runner.os }}-${{ hashFiles('**/Package.resolved') }}

      # ---------- iOS App: Test (Simulator) ----------
      - name: Show Xcode version
        run: xcodebuild -version

      - name: Preboot Simulator (best-effort)
        run: |
          xcrun simctl bootstatus booted -b || true
          xcrun simctl list devices | grep -A1 "${IOS_SIM_NAME}" || true

      - name: List schemes (debug)
        run: xcodebuild -list -workspace "$WORKSPACE_PATH" || true

      - name: Test App (Debug)
        run: |
          xcodebuild \
            -workspace "$WORKSPACE_PATH" \
            -scheme "$APP_SCHEME" \
            -configuration Debug \
            -destination "platform=iOS Simulator,name=${IOS_SIM_NAME},OS=${IOS_SIM_OS}" \
            -derivedDataPath "$DERIVED_DATA" \
            -parallel-testing-enabled YES \
            -maximum-concurrent-test-simulator-destinations 2 \
            -skipPackagePluginValidation \
            -quiet test

      # ---------- Logs on failure ----------
      - name: Archive Logs (on failure)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: xcode-logs
          path: |
            ${{ env.DERIVED_DATA }}/Logs
            ~/Library/Logs/DiagnosticReports
            ~/Library/Logs/CoreSimulator
